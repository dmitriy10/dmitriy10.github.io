{"version":3,"sources":["Components/Home.js","Components/Header.js","Components/Contact.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","menuItems","_this2","this","axios","get","then","res","items","data","today","Date","console","log","filteredArr","filter","el","elSplit","expirationDate","split","setState","react_default","a","createElement","className","src","alt","href","map","name","description","backgroundURL","Component","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isActive","concat","react_router_dom","to","id","onClick","toggleActive","Contact","changeHandler","e","defineProperty","target","value","submitHandler","preventDefault","post","email","comment","_this$state","onSubmit","type","placeholder","onChange","rows","cols","Footer","App","Header_Header","react_router","path","exact","component","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f1cc15c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Home.css';\n\nexport default class Home extends Component {\n  state = {\n    menuItems: [],\n  };\n  componentDidMount() {\n    axios.get('https://formula-test-api.herokuapp.com/menu').then(res => {\n      const items = res.data;\n      // const today = new Date('01/01/2000'); \n      const today = new Date();\n      console.log(items);\n      const filteredArr = items.filter((el) => {\n        const elSplit = el.expirationDate.split('-');\n        const itemDate = new Date(elSplit[2], +elSplit[0] - 1, elSplit[1]);\n        return itemDate > today;\n      });\n      console.log(filteredArr);\n      this.setState({ menuItems: filteredArr });\n    });\n  }\n  render() {\n    return (\n      <div>\n        <section className=\"intro\">\n          <img src=\"img/hotdog.png\" alt=\"hotdog\"></img>\n          <h1>Dirty Dogs serves all-beef, vegan and vegatagian hot dogs.</h1>\n          <div className=\"btn-intro-wrapper\">\n            <a href=\"#\" className=\"btn-intro\">More Dogsâ€˜n Make Me Hot</a>\n          </div>\n        </section>\n        <section className=\"hotdogs\">\n          {this.state.menuItems.map(el => \n            <div className=\"box-wrapper\">\n              <div className=\"left-box\">\n                <h2>{el.name}</h2>\n                <p>\n                  {el.description}\n                </p>\n              </div>\n              <div className=\"right-box\">\n                <img className=\"img\" src={el.backgroundURL} alt=\"hotdog\"></img>\n              </div>\n            </div>\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Header.css';\nimport { Link } from 'react-router-dom';\n\nexport default class Header extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isActive: false\n    }\n  }\n  toggleActive() {\n    this.setState({\n      isActive: !this.state.isActive\n    })\n  }\n  render() {\n    const {isActive} = this.state;\n    return (\n      <header>\n        <div className=\"insta\">\n          <a href=\"https://www.instagram.com/explore/tags/hotdogs\">\n            <img src=\"img/Instagram.png\" alt=\"instagram\"></img>\n            <p>#hotdogs</p>\n          </a>\n        </div>\n        <div className=\"hots-grid-wrapper\">\n          <div className=\"imgs-grid-1\">\n            <div className=\"shadow\"></div>\n            <img src=\"img/smallhot1.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot2.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot3.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot4.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot5.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot6.png\" alt=\"hotdog\"></img>\n          </div>\n          <div className=\"imgs-grid-2\">\n            <img src=\"img/smallhot1.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot2.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot3.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot4.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot5.png\" alt=\"hotdog\"></img>\n            <img src=\"img/smallhot6.png\" alt=\"hotdog\"></img>\n          </div>\n        </div>\n        <nav>\n          <ul className={`menu ${isActive ? 'active' : '' }`}>\n            <Link to=\"/\">\n              <li>Menu</li>\n            </Link>\n              <li>Catering</li>\n              <li>About us</li>\n            <Link to=\"/Contact\">\n              <li>Contact</li>\n            </Link>\n          </ul>\n          <img id=\"btn-menu\" src=\"img/menu.png\" alt=\"menu\" onClick={()=>this.toggleActive()}></img>\n        </nav>\n      </header>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Contact.css';\n\nexport default class Contact extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      comment: '',\n    }\n  }\n  changeHandler = e => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n  submitHandler = e => {\n    e.preventDefault();\n    axios.post(' https://formula-test-api.herokuapp.com/contact', this.state).then(res => {\n      console.log(res.data);\n    });\n    e.target.name.value = '';\n    e.target.email.value = '';\n    e.target.comment.value = '';\n    this.state.name = ''\n    this.state.email = ''\n    this.state.comment = ''\n  }\n  render() {\n    const { name, email, comment } = this.state\n    return (\n      <div>\n        <form onSubmit={this.submitHandler}>\n          <input type=\"text\" name=\"name\" placeholder=\"Name\" value={name} onChange={this.changeHandler}></input>\n          <input type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={this.changeHandler}></input>\n          <textarea name=\"comment\" rows=\"10\" cols=\"30\" placeholder=\"Comment\" value={comment} onChange={this.changeHandler}></textarea>\n          <input type=\"submit\" className=\"sub\"></input>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Footer.css';\n\n\nfunction Footer() {\n  return (\n    <footer>\n        <div className=\"rights\">\n            <p>Â®_2016_Dirty_Dogs_all_rights_reserved</p>\n        </div>\n        <div className=\"contacts\">\n            <a href=\"#\">274 Marconi Blvd. Columbus, Ohio 43215</a>\n            <a href=\"#\"><span>|</span> 614.538.0095 <span>|</span></a>\n            <a href=\"#\">Contact Us</a>\n        </div>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Home from './Components/Home'\nimport Header from './Components/Header'\nimport Contact from './Components/Contact'\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Footer from './Components/Footer';\n\nfunction App() {\n  return (\n    <Router>  \n      <div className=\"main\">\n        <Header />\n        <Switch>\n          <Route path='/' exact component = { Home } />\n          <Route path='/Contact' component = { Contact } />\n        </Switch>\n       <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}